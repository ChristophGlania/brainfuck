<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension
         point="org.eclipse.debug.core.launchConfigurationTypes">
      <launchConfigurationType
            delegate="org.birenheide.bf.debug.core.BfLaunchConfigurationDelegate"
            delegateDescription="Running and Debugging of Brainfuck Files"
            delegateName="Brainfuck Launcher"
            id="org.birenheide.bf.launchConfigurationType"
            modes="run, debug"
            name="Brainfuck"
            public="true"
            sourceLocatorId="org.birenheide.bf.sourceLocator"
            sourcePathComputerId="org.birenheide.bf.sourcePathComputer">
      </launchConfigurationType>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchConfigurationTabGroups">
      <launchConfigurationTabGroup
            class="org.birenheide.bf.debug.ui.BfConfigurationTabGroup"
            helpContextId="org.birenheide.bf.debug"
            id="org.birenheide.bf.launchConfigurationTabGroup"
            type="org.birenheide.bf.launchConfigurationType">
         <launchMode
               description="Debug a Brainfuck File"
               mode="debug"
               perspective="org.eclipse.debug.ui.DebugPerspective">
         </launchMode>
         <launchMode
               description="Run a Brainfuck File"
               mode="run">
         </launchMode>
      </launchConfigurationTabGroup>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchShortcuts">
      <shortcut
            class="org.birenheide.bf.debug.ui.BfLaunchShortcut"
            icon="icons/brainfuck.gif"
            id="org.birenheide.bf.launch.shortcut"
            label="Brainfuck Program"
            modes="run, debug">
         <contextualLaunch>
            <enablement>
               <with
                     variable="selection">
                  <count
                        value="1">
                  </count>
                  <iterate
                        ifEmpty="false"
                        operator="or">
                     <test
                           property="org.eclipse.debug.ui.matchesPattern"
                           value="*.bf">
                     </test>
                  </iterate>
               </with>
            </enablement>
         </contextualLaunch>
         <description
               description="Run a Brainfuck program"
               mode="run">
         </description>
         <description
               description="Debug a Brainfuck program"
               mode="debug">
         </description>
      </shortcut>
   </extension>
   <extension
         point="org.eclipse.debug.core.processFactories">
      <processFactory
            class="org.birenheide.bf.debug.core.BfProcessFactory"
            id="org.birenheide.bf.processFactory">
      </processFactory>
   </extension>
   <extension
         point="org.eclipse.debug.ui.launchConfigurationTypeImages">
      <launchConfigurationTypeImage
            configTypeID="org.birenheide.bf.launchConfigurationType"
            icon="icons/brainfuck.gif"
            id="org.birenheide.bf.launchConfigurationTypeImage">
      </launchConfigurationTypeImage>
   </extension>
   <extension
         point="org.eclipse.debug.core.sourceLocators">
      <sourceLocator
            class="org.birenheide.bf.debug.core.BfSourceLookupDirector"
            id="org.birenheide.bf.sourceLocator"
            name="Brainfuck Source Locator">
      </sourceLocator>
   </extension>
   <extension
         point="org.eclipse.debug.core.sourcePathComputers">
      <sourcePathComputer
            class="org.birenheide.bf.debug.core.BfSourcePathComputer"
            id="org.birenheide.bf.sourcePathComputer">
      </sourcePathComputer>
   </extension>
   <extension
         point="org.eclipse.debug.ui.debugModelPresentations">
      <debugModelPresentation
            class="org.birenheide.bf.debug.ui.BfDebugModelPresentation"
            id="org.birenheide.bf.debugModelPresentation">
      </debugModelPresentation>
   </extension>
   <extension
         point="org.eclipse.debug.ui.memoryRenderings">
      <renderingBindings
            defaultIds="org.birenheide.bf.hexRendering"
            primaryId="org.birenheide.bf.hexRendering"
            renderingIds="org.birenheide.bf.hexRendering,org.eclipse.debug.ui.rendering.ascii,org.eclipse.debug.ui.rendering.raw_memory">
      </renderingBindings>
      <renderingType
            class="org.birenheide.bf.debug.ui.BfMemoryTypeDelegate"
            id="org.birenheide.bf.hexRendering"
            name="Brainfuck Memory">
      </renderingType>
   </extension>
   <extension
         point="org.eclipse.ui.contexts">
      <context
            description="Brainfuck Debugging"
            id="org.birenheide.bf.debugging"
            name="Brainfuck Debugging"
            parentId="org.eclipse.debug.ui.debugging">
      </context>
   </extension>
   <extension
         point="org.eclipse.debug.ui.debugModelContextBindings">
      <modelContextBinding
            contextId="org.birenheide.bf.debugging"
            debugModelId="org.birenheide.bf.debugModelPresentation">
      </modelContextBinding>
   </extension>
   <extension
         point="org.eclipse.debug.ui.detailPaneFactories">
      <detailFactories
            class="org.birenheide.bf.debug.ui.BfBreakpointDetailFactory"
            id="org.birenheide.bf.breakpointDetailFactory">
         <enablement>
            <with
                  variable="selection">
               <count
                     value="1">
               </count>
               <iterate
                     ifEmpty="false">
                  <instanceof
                        value="org.birenheide.bf.debug.core.IBfBreakpoint">
                  </instanceof>
               </iterate>
            </with>
         </enablement>
      </detailFactories>
   </extension>
   <extension
         id="brainfuckBreakpointMarker"
         name="Brainfuck Breakpoint"
         point="org.eclipse.core.resources.markers">
      <super
            type="org.eclipse.debug.core.lineBreakpointMarker">
      </super>
      <persistent
            value="true">
      </persistent>
   </extension>
   <extension
         id="brainfuckWatchpointMarker"
         name="Brainfuck Watchpoint"
         point="org.eclipse.core.resources.markers">
      <super
            type="org.eclipse.debug.core.breakpointMarker">
      </super>
      <persistent
            value="true">
      </persistent>
   </extension>
   <extension
         point="org.eclipse.debug.core.breakpoints">
      <breakpoint
            class="org.birenheide.bf.debug.core.BfBreakpoint"
            id="org.birenheide.bf.debug.brainfuckBreakpoint"
            markerType="org.birenheide.bf.debug.brainfuckBreakpointMarker"
            name="Brainfuck Breakpoint">
      </breakpoint>
      <breakpoint
            class="org.birenheide.bf.debug.core.BfWatchpoint"
            id="org.birenheide.bf.debug.brainfuckWatchpoint"
            markerType="org.birenheide.bf.debug.brainfuckWatchpointMarker"
            name="Brainfuck Watchpoint">
      </breakpoint>
   </extension>
   <extension
         point="org.eclipse.debug.ui.contextViewBindings">
      <contextViewBinding
            autoOpen="true"
            contextId="org.birenheide.bf.debugging"
            viewId="org.eclipse.debug.ui.MemoryView">
      </contextViewBinding>
      <contextViewBinding
            autoOpen="true"
            contextId="org.birenheide.bf.debugging"
            viewId="org.eclipse.debug.ui.RegisterView">
      </contextViewBinding>
   </extension>
   <extension
         point="org.eclipse.core.runtime.adapters">
      <factory
            adaptableType="org.birenheide.bf.ed.BfEditor"
            class="org.birenheide.bf.debug.EditorAdapterFactory">
         <adapter
               type="org.eclipse.debug.ui.actions.IToggleBreakpointsTarget">
         </adapter>
      </factory>
   </extension>
   <extension
         point="org.eclipse.ui.editors.markerUpdaters">
      <updater
            class="org.birenheide.bf.debug.ui.BreakpointMarkerUpdater"
            id="org.birenheide.bf.debug.Updater"
            markerType="org.birenheide.bf.brainfuckBreakpointMarker">
      </updater>
   </extension>
   <extension
         point="org.eclipse.ui.commands">
      <category
            id="org.birenheide.bf.debug"
            name="Brainfuck Debugging">
      </category>
      <command
            categoryId="org.birenheide.bf.debug"
            description="Forces the console output of a Brainfuck process to flush"
            helpContextId="org.birenheide.bf.debug"
            id="org.birenheide.bf.debug.flushConsole"
            name="Force Flush">
      </command>
   </extension>
   <extension
         point="org.eclipse.ui.commandImages">
      <image
            commandId="org.birenheide.bf.debug.flushConsole"
            disabledIcon="platform:/plugin/org.eclipse.ui.console/icons/full/dlcl16/wordwrap.png"
            icon="platform:/plugin/org.eclipse.ui.console/icons/full/elcl16/wordwrap.png">
      </image>
   </extension>
   <extension
         point="org.eclipse.ui.handlers">
      <handler
            class="org.birenheide.bf.debug.ui.FlushConsoleHandler"
            commandId="org.birenheide.bf.debug.flushConsole"
            helpContextId="org.birenheide.bf.debug">
      </handler>
   </extension>
   <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            allPopups="false"
            locationURI="popup:org.birenheide.bf.BrainfuckEditor.EditorContext?before=additions">
         <command
               commandId="org.eclipse.debug.ui.commands.ToggleBreakpoint"
               id="bfBreakpoint"
               style="push">
            <visibleWhen
                  checkEnabled="true">
               <with
                     variable="activeEditor">
                  <instanceof
                        value="org.birenheide.bf.ed.BfEditor">
                  </instanceof>
               </with>
            </visibleWhen>
         </command>
      </menuContribution>
      <menuContribution
            allPopups="false"
            class="org.birenheide.bf.debug.ui.WatchpointExtensionFactory"
            locationURI="popup:org.birenheide.bf.BrainfuckEditor.EditorContext?after=bfBreakpoint">
      </menuContribution>
      <menuContribution
            allPopups="false"
            locationURI="popup:#TextRulerContext?before=additions">
         <command
               commandId="org.eclipse.debug.ui.commands.ToggleBreakpoint"
               id="bfBreakpoint"
               style="push">
            <visibleWhen
                  checkEnabled="true">
               <with
                     variable="activeEditor">
                  <instanceof
                        value="org.birenheide.bf.ed.BfEditor">
                  </instanceof>
               </with>
            </visibleWhen>
         </command>
      </menuContribution>
      <menuContribution
            allPopups="false"
            locationURI="popup:org.eclipse.debug.ui.ProcessConsoleType.#ContextMenu?before=additions">
         <separator
               name="org.birenheide.bf.debug.console"
               visible="true">
         </separator>
      </menuContribution>
      <menuContribution
            allPopups="false"
            locationURI="popup:org.eclipse.debug.ui.ProcessConsoleType.#ContextMenu?after=org.birenheide.bf.debug.console">
         <command
               commandId="org.birenheide.bf.debug.flushConsole"
               helpContextId="org.birenheide.bf.debug"
               style="push"
               tooltip="Force flushing of the Brainfuck process output">
            <visibleWhen
                  checkEnabled="false">
               <with
                     variable="activeContexts">
                  <iterate
                        ifEmpty="false"
                        operator="or">
                     <equals
                           value="org.birenheide.bf.debugging">
                     </equals>
                  </iterate>
               </with>
            </visibleWhen>
         </command>
      </menuContribution>
   </extension>
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="org.birenheide.bf.debug.core.PreferenceInitializer">
      </initializer>
   </extension>
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            category="org.birenheide.bf.MainPage"
            class="org.birenheide.bf.debug.ui.DebugPreferencePage"
            id="org.birenheide.bf.Debug"
            name="Run/Debug">
      </page>
   </extension>
   <extension
         point="org.eclipse.debug.core.statusHandlers">
      <statusHandler
            class="org.birenheide.bf.debug.ui.ErrorDialogStatusHandler"
            code="1"
            id="org.birenheide.bf.debug.errorInFile"
            plugin="org.birenheide.bf">
      </statusHandler>
   </extension>
   <extension
         point="org.eclipse.ui.editors.annotationTypes">
      <type
            name="org.birenheide.bf.debug.currentIP"
            super="org.eclipse.debug.ui.currentIP">
      </type>
      <type
            markerType="org.birenheide.bf.debug.brainfuckBreakpointMarker"
            name="org.birenheide.bf.debug.breakpoint"
            super="org.eclipse.debug.core.breakpoint">
      </type>
   </extension>
   <extension
         point="org.eclipse.ui.editors.markerAnnotationSpecification">
      <specification
            annotationImageProvider="org.birenheide.bf.debug.ui.InstructionPointerAnnotationImageProvider"
            annotationType="org.birenheide.bf.debug.currentIP"
            colorPreferenceKey="org.birenheide.bf.debug.currentIP.color"
            colorPreferenceValue="111,183,255"
            highlightPreferenceKey="org.birenheide.bf.debug.currentIP.highlight"
            highlightPreferenceValue="true"
            includeOnPreferencePage="true"
            label="Brainfuck Instruction Pointer"
            overviewRulerPreferenceKey="org.birenheide.bf.debug.currentIP.overviewRuler"
            overviewRulerPreferenceValue="true"
            textPreferenceKey="org.birenheide.bf.debug.currentIP.text"
            textPreferenceValue="true"
            textStylePreferenceKey="org.birenheide.bf.debug.currentIP.textStyle"
            textStylePreferenceValue="NONE"
            verticalRulerPreferenceKey="org.birenheide.bf.debug.currentIP.verticalRuler"
            verticalRulerPreferenceValue="true">
      </specification>
      <specification
            annotationType="org.birenheide.bf.debug.breakpoint"
            colorPreferenceKey="org.birenheide.bf.debug.breakpoint.color"
            colorPreferenceValue="0,0,255"
            highlightPreferenceKey="org.birenheide.bf.debug.breakpoint.highlight"
            highlightPreferenceValue="false"
            includeOnPreferencePage="true"
            isGoToNextNavigationTarget="false"
            isGoToNextNavigationTargetKey="org.birenheide.bf.debug.breakpoint.goToNextNavigation"
            isGoToPreviousNavigationTarget="false"
            isGoToPreviousNavigationTargetKey="org.birenheide.bf.debug.breakpoint.goToPreviousNavigation"
            label="Brainfuck Breakpoints"
            overviewRulerPreferenceKey="org.birenheide.bf.debug.breakpoint.overviewRuler"
            overviewRulerPreferenceValue="false"
            showInNextPrevDropdownToolbarAction="true"
            showInNextPrevDropdownToolbarActionKey="org.birenheide.bf.debug.breakpoint.showInNextPrevDropDown"
            textPreferenceKey="org.birenheide.bf.debug.text"
            textPreferenceValue="true"
            textStylePreferenceKey="org.birenheide.bf.debug.breakpoint.textStyle"
            textStylePreferenceValue="IBEAM"
            verticalRulerPreferenceKey="org.birenheide.bf.debug.verticalRuler"
            verticalRulerPreferenceValue="true">
      </specification>
   </extension>
   <extension
         point="org.birenheide.bf.annotationHover">
      <annotationHoverClass
            annotationType="org.birenheide.bf.debug.currentIP"
            class="org.birenheide.bf.debug.ui.InstructionPointerAnnotationHover">
      </annotationHoverClass>
   </extension>

</plugin>
